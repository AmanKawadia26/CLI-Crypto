// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\akawadia\Downloads\CryptoTracker\internal\repositories\auth_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "cryptotracker/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthRepository is a mock of AuthRepository interface.
type MockAuthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRepositoryMockRecorder
}

// MockAuthRepositoryMockRecorder is the mock recorder for MockAuthRepository.
type MockAuthRepositoryMockRecorder struct {
	mock *MockAuthRepository
}

// NewMockAuthRepository creates a new mock instance.
func NewMockAuthRepository(ctrl *gomock.Controller) *MockAuthRepository {
	mock := &MockAuthRepository{ctrl: ctrl}
	mock.recorder = &MockAuthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRepository) EXPECT() *MockAuthRepositoryMockRecorder {
	return m.recorder
}

// LoginDBRepository mocks base method.
func (m *MockAuthRepository) LoginDBRepository(username string) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginDBRepository", username)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoginDBRepository indicates an expected call of LoginDBRepository.
func (mr *MockAuthRepositoryMockRecorder) LoginDBRepository(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginDBRepository", reflect.TypeOf((*MockAuthRepository)(nil).LoginDBRepository), username)
}

// SignupDBRepository mocks base method.
func (m *MockAuthRepository) SignupDBRepository(user *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignupDBRepository", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// SignupDBRepository indicates an expected call of SignupDBRepository.
func (mr *MockAuthRepositoryMockRecorder) SignupDBRepository(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignupDBRepository", reflect.TypeOf((*MockAuthRepository)(nil).SignupDBRepository), user)
}
